// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yarn_server_common_protos.proto

/*
Package hadoop_yarn is a generated protocol buffer package.

It is generated from these files:
	yarn_server_common_protos.proto

It has these top-level messages:
	NodeStatusProto
	MasterKeyProto
	NodeHealthStatusProto
	VersionProto
	ResourceUtilizationProto
*/

package hadoop_yarn

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeActionProto int32

const (
	NodeActionProto_NORMAL   NodeActionProto = 0
	NodeActionProto_RESYNC   NodeActionProto = 1
	NodeActionProto_SHUTDOWN NodeActionProto = 2
)

var NodeActionProto_name = map[int32]string{
	0: "NORMAL",
	1: "RESYNC",
	2: "SHUTDOWN",
}
var NodeActionProto_value = map[string]int32{
	"NORMAL":   0,
	"RESYNC":   1,
	"SHUTDOWN": 2,
}

func (x NodeActionProto) Enum() *NodeActionProto {
	p := new(NodeActionProto)
	*p = x
	return p
}
func (x NodeActionProto) String() string {
	return proto.EnumName(NodeActionProto_name, int32(x))
}
func (x *NodeActionProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NodeActionProto_value, data, "NodeActionProto")
	if err != nil {
		return err
	}
	*x = NodeActionProto(value)
	return nil
}
func (NodeActionProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SignalContainerCommandProto int32

const (
	SignalContainerCommandProto_OUTPUT_THREAD_DUMP SignalContainerCommandProto = 1
	SignalContainerCommandProto_GRACEFUL_SHUTDOWN  SignalContainerCommandProto = 2
	SignalContainerCommandProto_FORCEFUL_SHUTDOWN  SignalContainerCommandProto = 3
)

var SignalContainerCommandProto_name = map[int32]string{
	1: "OUTPUT_THREAD_DUMP",
	2: "GRACEFUL_SHUTDOWN",
	3: "FORCEFUL_SHUTDOWN",
}
var SignalContainerCommandProto_value = map[string]int32{
	"OUTPUT_THREAD_DUMP": 1,
	"GRACEFUL_SHUTDOWN":  2,
	"FORCEFUL_SHUTDOWN":  3,
}

func (x SignalContainerCommandProto) Enum() *SignalContainerCommandProto {
	p := new(SignalContainerCommandProto)
	*p = x
	return p
}
func (x SignalContainerCommandProto) String() string {
	return proto.EnumName(SignalContainerCommandProto_name, int32(x))
}
func (x *SignalContainerCommandProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SignalContainerCommandProto_value, data, "SignalContainerCommandProto")
	if err != nil {
		return err
	}
	*x = SignalContainerCommandProto(value)
	return nil
}
func (SignalContainerCommandProto) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type NodeStatusProto struct {
	NodeId                *NodeIdProto              `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	ResponseId            *int32                    `protobuf:"varint,2,opt,name=response_id,json=responseId" json:"response_id,omitempty"`
	ContainersStatuses    []*ContainerStatusProto   `protobuf:"bytes,3,rep,name=containersStatuses" json:"containersStatuses,omitempty"`
	NodeHealthStatus      *NodeHealthStatusProto    `protobuf:"bytes,4,opt,name=nodeHealthStatus" json:"nodeHealthStatus,omitempty"`
	KeepAliveApplications []*ApplicationIdProto     `protobuf:"bytes,5,rep,name=keep_alive_applications,json=keepAliveApplications" json:"keep_alive_applications,omitempty"`
	ContainersUtilization *ResourceUtilizationProto `protobuf:"bytes,6,opt,name=containers_utilization,json=containersUtilization" json:"containers_utilization,omitempty"`
	NodeUtilization       *ResourceUtilizationProto `protobuf:"bytes,7,opt,name=node_utilization,json=nodeUtilization" json:"node_utilization,omitempty"`
	IncreasedContainers   []*ContainerProto         `protobuf:"bytes,8,rep,name=increased_containers,json=increasedContainers" json:"increased_containers,omitempty"`
	XXX_unrecognized      []byte                    `json:"-"`
}

func (m *NodeStatusProto) Reset()                    { *m = NodeStatusProto{} }
func (m *NodeStatusProto) String() string            { return proto.CompactTextString(m) }
func (*NodeStatusProto) ProtoMessage()               {}
func (*NodeStatusProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NodeStatusProto) GetNodeId() *NodeIdProto {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *NodeStatusProto) GetResponseId() int32 {
	if m != nil && m.ResponseId != nil {
		return *m.ResponseId
	}
	return 0
}

func (m *NodeStatusProto) GetContainersStatuses() []*ContainerStatusProto {
	if m != nil {
		return m.ContainersStatuses
	}
	return nil
}

func (m *NodeStatusProto) GetNodeHealthStatus() *NodeHealthStatusProto {
	if m != nil {
		return m.NodeHealthStatus
	}
	return nil
}

func (m *NodeStatusProto) GetKeepAliveApplications() []*ApplicationIdProto {
	if m != nil {
		return m.KeepAliveApplications
	}
	return nil
}

func (m *NodeStatusProto) GetContainersUtilization() *ResourceUtilizationProto {
	if m != nil {
		return m.ContainersUtilization
	}
	return nil
}

func (m *NodeStatusProto) GetNodeUtilization() *ResourceUtilizationProto {
	if m != nil {
		return m.NodeUtilization
	}
	return nil
}

func (m *NodeStatusProto) GetIncreasedContainers() []*ContainerProto {
	if m != nil {
		return m.IncreasedContainers
	}
	return nil
}

type MasterKeyProto struct {
	KeyId            *int32 `protobuf:"varint,1,opt,name=key_id,json=keyId" json:"key_id,omitempty"`
	Bytes            []byte `protobuf:"bytes,2,opt,name=bytes" json:"bytes,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MasterKeyProto) Reset()                    { *m = MasterKeyProto{} }
func (m *MasterKeyProto) String() string            { return proto.CompactTextString(m) }
func (*MasterKeyProto) ProtoMessage()               {}
func (*MasterKeyProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MasterKeyProto) GetKeyId() int32 {
	if m != nil && m.KeyId != nil {
		return *m.KeyId
	}
	return 0
}

func (m *MasterKeyProto) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

type NodeHealthStatusProto struct {
	IsNodeHealthy        *bool   `protobuf:"varint,1,opt,name=is_node_healthy,json=isNodeHealthy" json:"is_node_healthy,omitempty"`
	HealthReport         *string `protobuf:"bytes,2,opt,name=health_report,json=healthReport" json:"health_report,omitempty"`
	LastHealthReportTime *int64  `protobuf:"varint,3,opt,name=last_health_report_time,json=lastHealthReportTime" json:"last_health_report_time,omitempty"`
	XXX_unrecognized     []byte  `json:"-"`
}

func (m *NodeHealthStatusProto) Reset()                    { *m = NodeHealthStatusProto{} }
func (m *NodeHealthStatusProto) String() string            { return proto.CompactTextString(m) }
func (*NodeHealthStatusProto) ProtoMessage()               {}
func (*NodeHealthStatusProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NodeHealthStatusProto) GetIsNodeHealthy() bool {
	if m != nil && m.IsNodeHealthy != nil {
		return *m.IsNodeHealthy
	}
	return false
}

func (m *NodeHealthStatusProto) GetHealthReport() string {
	if m != nil && m.HealthReport != nil {
		return *m.HealthReport
	}
	return ""
}

func (m *NodeHealthStatusProto) GetLastHealthReportTime() int64 {
	if m != nil && m.LastHealthReportTime != nil {
		return *m.LastHealthReportTime
	}
	return 0
}

type VersionProto struct {
	MajorVersion     *int32 `protobuf:"varint,1,opt,name=major_version,json=majorVersion" json:"major_version,omitempty"`
	MinorVersion     *int32 `protobuf:"varint,2,opt,name=minor_version,json=minorVersion" json:"minor_version,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *VersionProto) Reset()                    { *m = VersionProto{} }
func (m *VersionProto) String() string            { return proto.CompactTextString(m) }
func (*VersionProto) ProtoMessage()               {}
func (*VersionProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *VersionProto) GetMajorVersion() int32 {
	if m != nil && m.MajorVersion != nil {
		return *m.MajorVersion
	}
	return 0
}

func (m *VersionProto) GetMinorVersion() int32 {
	if m != nil && m.MinorVersion != nil {
		return *m.MinorVersion
	}
	return 0
}

type ResourceUtilizationProto struct {
	Pmem             *int32   `protobuf:"varint,1,opt,name=pmem" json:"pmem,omitempty"`
	Vmem             *int32   `protobuf:"varint,2,opt,name=vmem" json:"vmem,omitempty"`
	Cpu              *float32 `protobuf:"fixed32,3,opt,name=cpu" json:"cpu,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ResourceUtilizationProto) Reset()                    { *m = ResourceUtilizationProto{} }
func (m *ResourceUtilizationProto) String() string            { return proto.CompactTextString(m) }
func (*ResourceUtilizationProto) ProtoMessage()               {}
func (*ResourceUtilizationProto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ResourceUtilizationProto) GetPmem() int32 {
	if m != nil && m.Pmem != nil {
		return *m.Pmem
	}
	return 0
}

func (m *ResourceUtilizationProto) GetVmem() int32 {
	if m != nil && m.Vmem != nil {
		return *m.Vmem
	}
	return 0
}

func (m *ResourceUtilizationProto) GetCpu() float32 {
	if m != nil && m.Cpu != nil {
		return *m.Cpu
	}
	return 0
}

func init() {
	proto.RegisterType((*NodeStatusProto)(nil), "hadoop.yarn.NodeStatusProto")
	proto.RegisterType((*MasterKeyProto)(nil), "hadoop.yarn.MasterKeyProto")
	proto.RegisterType((*NodeHealthStatusProto)(nil), "hadoop.yarn.NodeHealthStatusProto")
	proto.RegisterType((*VersionProto)(nil), "hadoop.yarn.VersionProto")
	proto.RegisterType((*ResourceUtilizationProto)(nil), "hadoop.yarn.ResourceUtilizationProto")
	proto.RegisterEnum("hadoop.yarn.NodeActionProto", NodeActionProto_name, NodeActionProto_value)
	proto.RegisterEnum("hadoop.yarn.SignalContainerCommandProto", SignalContainerCommandProto_name, SignalContainerCommandProto_value)
}

func init() { proto.RegisterFile("yarn_server_common_protos.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 661 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xd1, 0x6e, 0x12, 0x41,
	0x14, 0x86, 0x5d, 0x28, 0xb4, 0x1e, 0x68, 0x4b, 0xc7, 0xd2, 0x6e, 0x5a, 0x93, 0x22, 0x46, 0x43,
	0x7a, 0x41, 0x62, 0x13, 0xe3, 0x8d, 0x5e, 0x50, 0xda, 0x4a, 0x63, 0x0b, 0x38, 0x80, 0xb5, 0x89,
	0xc9, 0x64, 0xdc, 0x9d, 0x94, 0xb1, 0xec, 0xce, 0x66, 0x66, 0x21, 0x59, 0x9f, 0xc0, 0x77, 0xf0,
	0xc6, 0x57, 0xf3, 0x4d, 0xcc, 0xcc, 0x40, 0x77, 0xb1, 0xf5, 0xc2, 0x2b, 0x66, 0xff, 0xf3, 0x9f,
	0xef, 0x9c, 0x99, 0x39, 0x0c, 0x1c, 0x24, 0x54, 0x86, 0x44, 0x31, 0x39, 0x63, 0x92, 0x78, 0x22,
	0x08, 0x44, 0x48, 0x22, 0x29, 0x62, 0xa1, 0x9a, 0xe6, 0x07, 0x95, 0xc6, 0xd4, 0x17, 0x22, 0x6a,
	0x6a, 0xdf, 0xde, 0x96, 0x71, 0x67, 0xe3, 0x7b, 0x1b, 0x03, 0xe6, 0x4d, 0x25, 0x8f, 0x13, 0xfb,
	0x5d, 0xff, 0xbd, 0x02, 0x9b, 0x5d, 0xe1, 0xb3, 0x41, 0x4c, 0xe3, 0xa9, 0xea, 0x1b, 0xc6, 0x2b,
	0x58, 0x0d, 0x85, 0xcf, 0x08, 0xf7, 0x5d, 0xa7, 0xe6, 0x34, 0x4a, 0x47, 0x6e, 0x33, 0x43, 0x6d,
	0x6a, 0xfb, 0xb9, 0x6f, 0xac, 0xb8, 0x18, 0x9a, 0x0f, 0x74, 0x00, 0x25, 0xc9, 0x54, 0x24, 0x42,
	0x65, 0xd2, 0x72, 0x35, 0xa7, 0x51, 0xc0, 0xb0, 0x90, 0xce, 0x7d, 0xf4, 0x11, 0x90, 0x27, 0xc2,
	0x98, 0xf2, 0x90, 0x49, 0x65, 0x8b, 0x31, 0xe5, 0xe6, 0x6b, 0xf9, 0x46, 0xe9, 0xe8, 0xd9, 0x12,
	0xbe, 0xbd, 0xb0, 0x65, 0x5a, 0xc2, 0x0f, 0x24, 0xa3, 0x2e, 0x54, 0x74, 0xf5, 0x0e, 0xa3, 0x93,
	0x78, 0x6c, 0x55, 0x77, 0xc5, 0xf4, 0x5b, 0xbf, 0xd7, 0x6f, 0xd6, 0x64, 0x89, 0xf7, 0x72, 0xd1,
	0x15, 0xec, 0xde, 0x32, 0x16, 0x11, 0x3a, 0xe1, 0x33, 0x46, 0x68, 0x14, 0x4d, 0xb8, 0x47, 0x63,
	0x2e, 0x42, 0xe5, 0x16, 0x4c, 0x9f, 0x07, 0x4b, 0xd8, 0x56, 0x6a, 0x58, 0x9c, 0x46, 0x55, 0xe7,
	0xb7, 0x74, 0x7a, 0x26, 0xa8, 0xd0, 0x17, 0xd8, 0x49, 0xdb, 0x27, 0xd3, 0x98, 0x4f, 0xf8, 0x77,
	0x13, 0x72, 0x8b, 0xa6, 0xdd, 0x17, 0x4b, 0x5c, 0xcc, 0x94, 0x98, 0x4a, 0x8f, 0x8d, 0x52, 0xdf,
	0x9c, 0x9e, 0x42, 0x32, 0x31, 0xd4, 0xb7, 0xc7, 0xb0, 0xc4, 0x5d, 0xfd, 0x1f, 0xee, 0xa6, 0x4e,
	0xcf, 0x12, 0xbb, 0xb0, 0xcd, 0x43, 0x4f, 0x32, 0xaa, 0x98, 0x4f, 0xd2, 0xa2, 0xee, 0x9a, 0x39,
	0x85, 0xfd, 0x87, 0x6f, 0xcb, 0xb2, 0x9e, 0xdc, 0x25, 0xde, 0x05, 0x54, 0xfd, 0x1d, 0x6c, 0x5c,
	0x52, 0x15, 0x33, 0xf9, 0x81, 0x25, 0x76, 0xc2, 0xaa, 0x50, 0xbc, 0x65, 0xc9, 0x62, 0xc0, 0x0a,
	0xb8, 0x70, 0xcb, 0x92, 0x73, 0x1f, 0x6d, 0x43, 0xe1, 0x6b, 0x12, 0x33, 0x65, 0xe6, 0xa7, 0x8c,
	0xed, 0x47, 0xfd, 0xa7, 0x03, 0xd5, 0x07, 0xef, 0x10, 0xbd, 0x84, 0x4d, 0xae, 0x88, 0xd9, 0xfd,
	0xd8, 0x04, 0x13, 0xc3, 0x5b, 0xc3, 0xeb, 0x5c, 0xa5, 0x19, 0x09, 0x7a, 0x0e, 0xeb, 0x36, 0x4e,
	0x24, 0x8b, 0x84, 0x8c, 0x0d, 0xff, 0x31, 0x2e, 0x5b, 0x11, 0x1b, 0x0d, 0xbd, 0x86, 0xdd, 0x09,
	0x55, 0x31, 0x59, 0x72, 0x92, 0x98, 0x07, 0xcc, 0xcd, 0xd7, 0x9c, 0x46, 0x1e, 0x6f, 0xeb, 0x70,
	0x27, 0x93, 0x32, 0xe4, 0x01, 0xab, 0x7f, 0x86, 0xf2, 0x27, 0x26, 0xd5, 0xe2, 0x34, 0x75, 0xad,
	0x80, 0x7e, 0x13, 0x92, 0xcc, 0xac, 0x3a, 0xdf, 0x61, 0xd9, 0x88, 0x73, 0xa7, 0x31, 0xf1, 0x30,
	0x63, 0xca, 0xcd, 0x4d, 0x5a, 0x9c, 0x9b, 0xea, 0x43, 0x70, 0xff, 0x75, 0x67, 0x08, 0xc1, 0x4a,
	0x14, 0xb0, 0x60, 0x0e, 0x37, 0x6b, 0xad, 0xcd, 0xb4, 0x66, 0x59, 0x66, 0x8d, 0x2a, 0x90, 0xf7,
	0xa2, 0xa9, 0xd9, 0x40, 0x0e, 0xeb, 0xe5, 0xe1, 0x1b, 0xfb, 0x7f, 0x6f, 0x79, 0x29, 0x0c, 0xa0,
	0xd8, 0xed, 0xe1, 0xcb, 0xd6, 0x45, 0xe5, 0x91, 0x5e, 0xe3, 0xd3, 0xc1, 0x75, 0xb7, 0x5d, 0x71,
	0x50, 0x19, 0xd6, 0x06, 0x9d, 0xd1, 0xf0, 0xa4, 0x77, 0xd5, 0xad, 0xe4, 0x0e, 0x3d, 0xd8, 0x1f,
	0xf0, 0x9b, 0x90, 0x4e, 0xee, 0x6e, 0xb6, 0x2d, 0x82, 0x80, 0x86, 0x76, 0xf6, 0xd1, 0x0e, 0xa0,
	0xde, 0x68, 0xd8, 0x1f, 0x0d, 0xc9, 0xb0, 0x83, 0x4f, 0x5b, 0x27, 0xe4, 0x64, 0x74, 0xd9, 0xaf,
	0x38, 0xa8, 0x0a, 0x5b, 0xef, 0x71, 0xab, 0x7d, 0x7a, 0x36, 0xba, 0x20, 0x29, 0x4d, 0xcb, 0x67,
	0x3d, 0xfc, 0x97, 0x9c, 0x3f, 0x7e, 0x0b, 0x4f, 0x85, 0xbc, 0x69, 0xd2, 0x88, 0x7a, 0x63, 0xb6,
	0x34, 0x68, 0xe6, 0xb9, 0x3a, 0xde, 0xb9, 0xa6, 0x32, 0x1c, 0x98, 0xe7, 0xaf, 0x6d, 0x5e, 0x3f,
	0x53, 0x5c, 0xfd, 0x70, 0x9c, 0x5f, 0x8e, 0xf3, 0x27, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x5f, 0x4a,
	0xef, 0x1e, 0x05, 0x00, 0x00,
}
